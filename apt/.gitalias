# Destroyed a commit by accident ?
# git reflog
# git checkout -b someNewBranchName shaYouDestroyed
# You have 90 days

[alias]
  a = add -A
	s = status
	c = commit -m
  p = push
  cp = cherry-pick

  # first push
  pushf = !"git push -u origin $(git rev-parse --abbrev-ref HEAD)"

  # list files not used by this git
  others = "ls-files --others --ignored --exclude-from=.gitignore"

  # removes last commit - ready to commit again
  uncommit = "reset --soft HEAD~1"
  # removes last commit - need to add again before commit
  undo = "reset HEAD~1"

  # rename branch
  rename = branch -m
  rename-origin = !"f() { git branch -m $1 $2 && git push origin -m $2 && git push origin --delete $1; } ; f"

  # checkout
  co = checkout
  new = checkout -b

  # stash
  stl = stash list

  # colored log
  log-color = log --color=always
  # list all commits in one line - scrollable
  la = !"git log-color --decorate --date=short --pretty=format:'%C(yellow)%H %C(green)%ad%C(red)%d %C(reset)%s %C(blue)[%cn]%C(reset)'"
  list-all = la
  # print last 20 commits in one line
  l = !"git la -20 | cat && echo"
  list = l
  # print last 20 commits graph
  lg = !"git log-color -20 --oneline --graph --format='%C(auto)%h%d %s %C(black)%C(green)%cr %C(blue)[%cn]%C(reset)'| cat"
  list-graph = lg
  # print last 10 commits graph detailed
  ls = !"git log-color -10 --graph --stat | cat"
  # print last commit details
  last = !"git log-color -1 HEAD --stat | cat"
  # print all commits details from origin
  lo = !"git log-color origin/HEAD..HEAD --stat | cat"
  list-from-origin = lo

  # print name of current branch
  bp = !"echo $(git rev-parse --abbrev-ref HEAD)"
  # list branches sorted by last modified
  b = !"git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"
  br = !"git branch | cat"
  bra = !"git branch -a | cat"

  # diff
  d = diff
  ds = diff --staged
  diff-staged = ds
  dc = diff --cached
  diff-cached = dc

  # diff word
  dw = diff --color-words
  diff-word = dw
  dws = diff --staged --color-words
  diff-word-staged = dws
  dwc = diff --cached --color-words
  diff-word-cached = dwc

  # diff last commit
  dl = !"git show | bat -l patch"
  diff-last = dl
  # diff now
  dn = !"git diff HEAD | bat -l patch"
  diff-now = dn

  # diff tool
  dv = difftool -t vimdiff -y
  diff-view = dv

  # grep
  grep = grep -Ii